// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NRDCL.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace NRDCL.Migrations
{
    [DbContext(typeof(NRDCL_DB_Context))]
    partial class NRDCL_DB_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("NRDCL.Models.Customer", b =>
                {
                    b.Property<string>("CitizenshipID")
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .HasColumnType("text");

                    b.Property<string>("EmailId")
                        .HasColumnType("text");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("text");

                    b.HasKey("CitizenshipID");

                    b.ToTable("Customer_Table");
                });

            modelBuilder.Entity("NRDCL.Models.Deposit", b =>
                {
                    b.Property<string>("CustomerID")
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LastAmount")
                        .HasColumnType("numeric");

                    b.HasKey("CustomerID");

                    b.ToTable("Deposit_Table");
                });

            modelBuilder.Entity("NRDCL.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("CustomerID")
                        .HasColumnType("text");

                    b.Property<decimal>("OrderAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductID")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int>("SiteID")
                        .HasColumnType("integer");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SiteID");

                    b.ToTable("Order_Table");
                });

            modelBuilder.Entity("NRDCL.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductName")
                        .HasColumnType("text");

                    b.Property<decimal>("TransportRate")
                        .HasColumnType("numeric");

                    b.HasKey("ProductId");

                    b.ToTable("Product_Table");
                });

            modelBuilder.Entity("NRDCL.Models.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("CitizenshipID")
                        .HasColumnType("text");

                    b.Property<double>("DistanceFrom")
                        .HasColumnType("double precision");

                    b.Property<string>("SiteName")
                        .HasColumnType("text");

                    b.HasKey("SiteId");

                    b.HasIndex("CitizenshipID");

                    b.ToTable("Site_Table");
                });

            modelBuilder.Entity("NRDCL.Models.Deposit", b =>
                {
                    b.HasOne("NRDCL.Models.Customer", "Customer")
                        .WithOne("Deposit")
                        .HasForeignKey("NRDCL.Models.Deposit", "CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NRDCL.Models.Order", b =>
                {
                    b.HasOne("NRDCL.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID");

                    b.HasOne("NRDCL.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NRDCL.Models.Site", "Site")
                        .WithMany("Orders")
                        .HasForeignKey("SiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("NRDCL.Models.Site", b =>
                {
                    b.HasOne("NRDCL.Models.Customer", "Customer")
                        .WithMany("Sites")
                        .HasForeignKey("CitizenshipID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NRDCL.Models.Customer", b =>
                {
                    b.Navigation("Deposit");

                    b.Navigation("Orders");

                    b.Navigation("Sites");
                });

            modelBuilder.Entity("NRDCL.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("NRDCL.Models.Site", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
